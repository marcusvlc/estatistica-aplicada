#QUESTAO 01
questao01 <- function(n, replaceValue){
x <- c(1,2,3,3,5)
vector <- c()
for (j in n) {
for (i in 1:1000){
mediaDaAmostra <- mean(sample(x, j, replace=replaceValue))
vector <- c(vector,mediaDaAmostra)
}
hist(vector, main = paste('Histograma para o valor',j))
print(paste('Extraindo 1000 amostras de tamanho', j, sep=' '))
print(paste('MÃ©dia dos valores:', mean(vector), sep= ' '))
print(paste('A mÃ©dia deve se aproximar de', mean(x)))
print(paste('VariÃ¢ncia:', var(vector), sep=' '))
varDeX <- var(x)/j
print(paste('VariÃ¢ncia da amostra deve se aproximar de:',varDeX , sep=' '))
vector <- c()
print('----------------------------------')
}
}
#Chamando a funcao da questao 01 referente a letra A
questao01(c(2,3,5,10), TRUE)
#Chamando a funcao da questao 01 referente a letra B
questao01(c(2,3), FALSE)
# -------------------------------
# QUESTAO 02
acumMediasNormal <- c()
acumVarNormal <- c()
for(k in 1:1000){
normal <- rnorm(100, mean=100, sd=5)
media <- mean(normal)
variancia <- var(normal)
acumMediasNormal <- c(acumMediasNormal, media)
acumVarNormal <- c(acumVarNormal, variancia)
}
hist(acumMediasNormal)
hist(acumVarNormal)
#Comparando os valores gerados com os fornecidos
mediaTotal <- mean(acumMediasNormal)
varianciaTotal <- mean(acumVarNormal)
print(paste('A mÃ©dia e a variÃ¢ncia obtida foi, respectivamente:', mediaTotal, varianciaTotal))
print(paste('A mÃ©dia e a variÃ¢ncia do resultado teÃ³rico Ã©: 100 e 25'))
# ------------------------------
#QUESTAO 01
questao01 <- function(n, replaceValue){
x <- c(1,2,3,3,5)
vector <- c()
for (j in n) {
for (i in 1:1000){
mediaDaAmostra <- mean(sample(x, j, replace=replaceValue))
vector <- c(vector,mediaDaAmostra)
}
hist(vector, main = paste('Histograma para o valor',j))
print(paste('Extraindo 1000 amostras de tamanho', j, sep=' '))
print(paste('Media dos valores:', mean(vector), sep= ' '))
print(paste('A media deve se aproximar de', mean(x)))
print(paste('Variancia:', var(vector), sep=' '))
varDeX <- var(x)/j
print(paste('Variancia da amostra deve se aproximar de:',varDeX , sep=' '))
vector <- c()
print('----------------------------------')
}
}
#Chamando a funcao da questao 01 referente a letra A
questao01(c(2,3,5,10), TRUE)
#Chamando a funcao da questao 01 referente a letra B
questao01(c(2,3), FALSE)
# -------------------------------
# QUESTAO 02
acumMediasNormal <- c()
acumVarNormal <- c()
for(k in 1:1000){
normal <- rnorm(100, mean=100, sd=5)
media <- mean(normal)
variancia <- var(normal)
acumMediasNormal <- c(acumMediasNormal, media)
acumVarNormal <- c(acumVarNormal, variancia)
}
hist(acumMediasNormal)
hist(acumVarNormal)
#Comparando os valores gerados com os fornecidos
mediaTotal <- mean(acumMediasNormal)
varianciaTotal <- mean(acumVarNormal)
print(paste('A media e a variancia obtida foi, respectivamente:', mediaTotal, varianciaTotal))
print(paste('A media e a variancia do resultado teorico eh: 100 e 25'))
# ------------------------------
# QUESTAO 02
acumMediasNormal <- c()
acumVarNormal <- c()
for(k in 1:1000){
normal <- rnorm(100, mean=100, sd=5)
media <- mean(normal)
variancia <- var(normal)
acumMediasNormal <- c(acumMediasNormal, media)
acumVarNormal <- c(acumVarNormal, variancia)
}
hist(acumMediasNormal)
hist(acumVarNormal)
#Comparando os valores gerados com os fornecidos
mediaTotal <- mean(acumMediasNormal)
varianciaTotal <- mean(acumVarNormal)
print(paste('A media e a variancia obtida foi, respectivamente:', mediaTotal, varianciaTotal))
print(paste('A media e a variancia do resultado teorico eh: 100 e 25'))
# QUESTAO 02
acumMediasNormal <- c()
acumVarNormal <- c()
for(k in 1:1000){
normal <- rnorm(100, mean=100, sd=5)
media <- mean(normal)
variancia <- var(normal)
acumMediasNormal <- c(acumMediasNormal, media)
acumVarNormal <- c(acumVarNormal, variancia)
}
hist(acumMediasNormal)
hist(acumVarNormal)
#Comparando os valores gerados com os fornecidos
mediaTotal <- mean(acumMediasNormal)
varianciaTotal <- mean(acumVarNormal)
print(paste('A media e a variancia obtida foi, respectivamente:', mediaTotal, varianciaTotal))
print(paste('A media e a variancia do resultado teorico eh: 100 e 25'))
#QUESTAO 01
questao01 <- function(n, replaceValue){
x <- c(1,2,3,3,5)
vector <- c()
for (j in n) {
for (i in 1:1000){
mediaDaAmostra <- mean(sample(x, j, replace=replaceValue))
vector <- c(vector,mediaDaAmostra)
}
hist(vector, main = paste('Histograma para o valor',j))
print(paste('Extraindo 1000 amostras de tamanho', j, sep=' '))
print(paste('Media dos valores:', mean(vector), sep= ' '))
print(paste('A media deve se aproximar de', mean(x)))
print(paste('Variancia:', var(vector), sep=' '))
varDeX <- var(x)/j
print(paste('Variancia da amostra deve se aproximar de:',varDeX , sep=' '))
vector <- c()
print('----------------------------------')
}
}
#Chamando a funcao da questao 01 referente a letra A
questao01(c(2,3,5,10), TRUE)
#Chamando a funcao da questao 01 referente a letra B
questao01(c(2,3), FALSE)
# -------------------------------
# QUESTAO 02
acumMediasNormal <- c()
acumVarNormal <- c()
for(k in 1:1000){
normal <- rnorm(100, mean=100, sd=5)
media <- mean(normal)
variancia <- var(normal)
acumMediasNormal <- c(acumMediasNormal, media)
acumVarNormal <- c(acumVarNormal, variancia)
}
hist(acumMediasNormal)
hist(acumVarNormal)
#Comparando os valores gerados com os fornecidos
mediaTotal <- mean(acumMediasNormal)
varianciaTotal <- mean(acumVarNormal)
print(paste('A media e a variancia obtida foi, respectivamente:', mediaTotal, varianciaTotal))
print(paste('A media e a variancia do resultado teorico eh: 100 e 25'))
# ------------------------------
# QUESTAO 03
alpha = 10
expMeanDist = c()
for (i in 1:k){
expDistribution = rexp(size, rate=alpha)
expMeanDist = c(expMeanDist, mean(expDistribution))
}
T = 1/expMeanDist
hist(T, main="Histograma do parâmetro T das médias das amostras Exp(10)")
# QUESTAO 03
alpha = 10
expMeanDist = c()
for (i in 1:1000){
expDistribution = rexp(size, rate=alpha)
expMeanDist = c(expMeanDist, mean(expDistribution))
}
T = 1/expMeanDist
hist(T, main="Histograma do parâmetro T das médias das amostras Exp(10)")
# QUESTAO 03
alpha = 10
expMeanDist = c()
for (i in 1:1000){
expDistribution = rexp(100, rate=alpha)
expMeanDist = c(expMeanDist, mean(expDistribution))
}
T = 1/expMeanDist
hist(T, main="Histograma do parâmetro T das médias das amostras Exp(10)")
# QUESTAO 03
# Gerando 1000 amostras de tamanho 100 da distribuicao exp com alpha igual a 10
alpha = 10
expMediaAcum = c()
for (i in 1:1000){
exp = rexp(100, rate=alpha)
expMediaAcum = c(expMediaAcum, mean(exp))
}
T = 1/expMeanDist
hist(T, main="Histograma de T")
print(mean(T))
print(var(T))
alpha = 10
expMediaAcum = c()
for (i in 1:1000){
exp = rexp(100, rate=alpha)
expMediaAcum = c(expMediaAcum, mean(exp))
}
T = 1/expMeanDist
print(paste('Media do parametro T:',mean(T)))
print(paste('Variancia do parametro T',var(T)))
hist(T, main="Histograma de T")
setwd("C:/Users/Marcus/Desktop/exercicio5estatistica")
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
# letra a
View(dados)
View(dados)
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
for (i in dados) {
print(i)
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for (i in dados) {
mediaComodos = mediaComodos + i
if(i > 5){
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
print(acumMaioresQueCinco)
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for (i in dados) {
mediaComodos = mediaComodos + i
if(i > 5){
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
print(acumMaioresQueCinco)
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for (i in dados) {
if(i > 5){
print(i)
}
}
print(acumMaioresQueCinco)
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in 1:length(dados)){
print(i)
}
print(acumMaioresQueCinco)
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
print(length(dados))
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
print(i)
}
# letra a
for(i in dados){
print(i)
}
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
print(i > 5)
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
if(i > 5) print(i)
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
if(i > 5) print(i)
else print(i)
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
if(i > 5) print(i)
else print("carai")
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
if(i > 5) print(i)
else
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
acumMaioresQueCinco = 0;
mediaComodos = 0;
for(i in dados){
if(i > 5) {print(i)}
else{}
}
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
teste <= c(dados);
acumMaioresQueCinco = 0;
mediaComodos = 0;
print(lenght(teste))
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
teste <= c(dados);
acumMaioresQueCinco = 0;
mediaComodos = 0;
print(length(teste))
# letra a
# QUESTAO 01
dados = read.csv("comodos.csv")
attach(dados)
teste = c(dados);
acumMaioresQueCinco = 0;
mediaComodos = 0;
print(length(teste))
# letra a
# QUESTAO 01
domicilios = c(4,5,2,9,1,4,4,6,7,2,2,4,4,7,4,5,6,8,1,2,6,4,2,3,2,3,2,4,5,6,8,5,2,3,4,1,6,3,2,3,5,4,8,5,4,2,4,3,2,4,5,9,5,6,4,3,4,5,4,2,9,8,18,8,7,9,6,14,8,9,22,8,9,14,9,9,8,8,15,7,7,9,9,8,7,12,8,9,8,8)
qtdDomicilios = length(domicilios)
print(qtdDomicilios)
acumMaioresQueCinco = 0;
mediaComodos = 0;
print(length(teste))
# letra a
# QUESTAO 01
domicilios = c(4,5,2,9,1,4,4,6,7,2,2,4,4,7,4,5,6,8,1,2,6,4,2,3,2,3,2,4,5,6,8,5,2,3,4,1,6,3,2,3,5,4,8,5,4,2,4,3,2,4,5,9,5,6,4,3,4,5,4,2,9,8,18,8,7,9,6,14,8,9,22,8,9,14,9,9,8,8,15,7,7,9,9,8,7,12,8,9,8,8)
qtdDomicilios = length(domicilios)
# letra a
acumMaioresQueCinco = 0
mediaComodos = 0
for(i in 1:qtdDomicilios){
mediaComodos = mediaComodos + domicilios[i]
if(domicilios[i] > 5) {
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
# QUESTAO 01
domicilios = c(4,5,2,9,1,4,4,6,7,2,2,4,4,7,4,5,6,8,1,2,6,4,2,3,2,3,2,4,5,6,8,5,2,3,4,1,6,3,2,3,5,4,8,5,4,2,4,3,2,4,5,9,5,6,4,3,4,5,4,2,9,8,18,8,7,9,6,14,8,9,22,8,9,14,9,9,8,8,15,7,7,9,9,8,7,12,8,9,8,8)
qtdDomicilios = length(domicilios)
# letra a
acumMaioresQueCinco = 0
mediaComodos = 0
for(i in 1:qtdDomicilios){
mediaComodos = mediaComodos + domicilios[i]
if(domicilios[i] > 5) {
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
print(acumMaioresQueCinco)
# QUESTAO 01
domicilios = c(4,5,2,9,1,4,4,6,7,2,2,4,4,7,4,5,6,8,1,2,6,4,2,3,2,3,2,4,5,6,8,5,2,3,4,1,6,3,2,3,5,4,8,5,4,2,4,3,2,4,5,9,5,6,4,3,4,5,4,2,9,8,18,8,7,9,6,14,8,9,22,8,9,14,9,9,8,8,15,7,7,9,9,8,7,12,8,9,8,8)
qtdDomicilios = length(domicilios)
# letra a
acumMaioresQueCinco = 0
acumComodos = 0
for(i in 1:qtdDomicilios){
acumComodos = acumComodos + domicilios[i]
if(domicilios[i] > 5) {
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
proporcaoMaiorQueCinco = acumMaioresQueCinco / qtdDomicilios
mediaComodos = acumComodos / qtdDomicilios
# QUESTAO 01
domicilios = c(4,5,2,9,1,4,4,6,7,2,2,4,4,7,4,5,6,8,1,2,6,4,2,3,2,3,2,4,5,6,8,5,2,3,4,1,6,3,2,3,5,4,8,5,4,2,4,3,2,4,5,9,5,6,4,3,4,5,4,2,9,8,18,8,7,9,6,14,8,9,22,8,9,14,9,9,8,8,15,7,7,9,9,8,7,12,8,9,8,8)
qtdDomicilios = length(domicilios)
# letra a
acumMaioresQueCinco = 0
acumComodos = 0
for(i in 1:qtdDomicilios){
acumComodos = acumComodos + domicilios[i]
if(domicilios[i] > 5) {
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
proporcaoMaiorQueCinco = acumMaioresQueCinco / qtdDomicilios
mediaComodos = acumComodos / qtdDomicilios
# QUESTAO 01
domicilios = c(4,5,2,9,1,4,4,6,7,2,2,4,4,7,4,5,6,8,1,2,6,4,2,3,2,3,2,4,5,6,8,5,2,3,4,1,6,3,2,3,5,4,8,5,4,2,4,3,2,4,5,9,5,6,4,3,4,5,4,2,9,8,18,8,7,9,6,14,8,9,22,8,9,14,9,9,8,8,15,7,7,9,9,8,7,12,8,9,8,8)
qtdDomicilios = length(domicilios)
# letra a
acumMaioresQueCinco = 0
acumComodos = 0
for(i in 1:qtdDomicilios){
acumComodos = acumComodos + domicilios[i]
if(domicilios[i] > 5) {
acumMaioresQueCinco = acumMaioresQueCinco + 1
}
}
proporcaoMaiorQueCinco = (acumMaioresQueCinco / qtdDomicilios) * 100
mediaComodos = acumComodos / qtdDomicilios
